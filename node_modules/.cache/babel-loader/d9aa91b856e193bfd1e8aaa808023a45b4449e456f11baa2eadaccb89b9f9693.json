{"ast":null,"code":"var _jsxFileName = \"G:\\\\Hack Indore\\\\React Main\\\\my-app\\\\src\\\\components\\\\Department\\\\WarehouseSpace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart, registerables } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nfunction InventoryAnalysis() {\n  _s();\n  const [items, setItems] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('http://localhost:5000/api/healthcare');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setItems(data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Prepare data for the bar chart\n  const chartData = {\n    labels: items.map(item => item.item_name),\n    datasets: [{\n      label: 'Quantity',\n      data: items.map(item => item.quantity),\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n\n  // Compute total quantity and average quantity\n  const totalQuantity = items.reduce((total, item) => total + item.quantity, 0);\n  const averageQuantity = items.length > 0 ? (totalQuantity / items.length).toFixed(2) : 0;\n\n  // Compute the top 3 products by quantity\n  const sortedItems = [...items].sort((a, b) => b.quantity - a.quantity);\n  const topProducts = sortedItems.slice(0, 3);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8 text-center text-gray-800\",\n      children: \"Inventory Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-blue-500 text-lg\",\n      children: \"Loading data, please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 text-lg mb-4\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 shadow-md rounded-lg mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Product Quantities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          data: chartData,\n          options: {\n            responsive: true,\n            plugins: {\n              legend: {\n                position: 'top'\n              },\n              tooltip: {\n                callbacks: {\n                  label: function (tooltipItem) {\n                    return `Quantity: ${tooltipItem.raw}`;\n                  }\n                }\n              }\n            },\n            scales: {\n              x: {\n                ticks: {\n                  autoSkip: false,\n                  maxRotation: 90,\n                  minRotation: 45\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-2xl bg-white p-6 shadow-md rounded-lg mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: \"Total Quantity:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), \" \", totalQuantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: \"Average Quantity per Product:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), \" \", averageQuantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Top 3 Products by Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc pl-5 text-gray-700\",\n          children: topProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [product.item_name, \": \", product.quantity, \" units\"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(InventoryAnalysis, \"XNZWZkWlNaoR33HWHZh4JXDPirk=\");\n_c = InventoryAnalysis;\nexport default InventoryAnalysis;\nvar _c;\n$RefreshReg$(_c, \"InventoryAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Chart","registerables","jsxDEV","_jsxDEV","Fragment","_Fragment","register","InventoryAnalysis","_s","items","setItems","error","setError","loading","setLoading","fetchData","response","fetch","ok","Error","data","json","console","message","chartData","labels","map","item","item_name","datasets","label","quantity","backgroundColor","borderColor","borderWidth","totalQuantity","reduce","total","averageQuantity","length","toFixed","sortedItems","sort","a","b","topProducts","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","legend","position","tooltip","callbacks","tooltipItem","raw","scales","x","ticks","autoSkip","maxRotation","minRotation","product","index","_c","$RefreshReg$"],"sources":["G:/Hack Indore/React Main/my-app/src/components/Department/WarehouseSpace.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart, registerables } from 'chart.js';\r\nChart.register(...registerables);\r\n\r\nfunction InventoryAnalysis() {\r\n  const [items, setItems] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/healthcare');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setItems(data);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Prepare data for the bar chart\r\n  const chartData = {\r\n    labels: items.map(item => item.item_name),\r\n    datasets: [{\r\n      label: 'Quantity',\r\n      data: items.map(item => item.quantity),\r\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n      borderColor: 'rgba(75, 192, 192, 1)',\r\n      borderWidth: 1,\r\n    }]\r\n  };\r\n\r\n  // Compute total quantity and average quantity\r\n  const totalQuantity = items.reduce((total, item) => total + item.quantity, 0);\r\n  const averageQuantity = items.length > 0 ? (totalQuantity / items.length).toFixed(2) : 0;\r\n\r\n  // Compute the top 3 products by quantity\r\n  const sortedItems = [...items].sort((a, b) => b.quantity - a.quantity);\r\n  const topProducts = sortedItems.slice(0, 3);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100 p-6\">\r\n      <h1 className=\"text-4xl font-bold mb-8 text-center text-gray-800\">Inventory Analysis</h1>\r\n      {loading ? (\r\n        <p className=\"text-blue-500 text-lg\">Loading data, please wait...</p>\r\n      ) : error ? (\r\n        <p className=\"text-red-500 text-lg mb-4\">Error: {error}</p>\r\n      ) : (\r\n        <>\r\n          {/* Bar Chart */}\r\n          <div className=\"bg-white p-6 shadow-md rounded-lg mb-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">Product Quantities</h2>\r\n            <Bar\r\n              data={chartData}\r\n              options={{\r\n                responsive: true,\r\n                plugins: {\r\n                  legend: {\r\n                    position: 'top',\r\n                  },\r\n                  tooltip: {\r\n                    callbacks: {\r\n                      label: function(tooltipItem) {\r\n                        return `Quantity: ${tooltipItem.raw}`;\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n                scales: {\r\n                  x: {\r\n                    ticks: {\r\n                      autoSkip: false,\r\n                      maxRotation: 90,\r\n                      minRotation: 45,\r\n                    }\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {/* Analysis Section */}\r\n          <div className=\"w-full max-w-2xl bg-white p-6 shadow-md rounded-lg mb-8\">\r\n            <h2 className=\"text-2xl font-semibold mb-4\">Analysis</h2>\r\n            <p className=\"text-gray-700 mb-4\">\r\n              <span className=\"font-medium\">Total Quantity:</span> {totalQuantity}\r\n            </p>\r\n            <p className=\"text-gray-700 mb-4\">\r\n              <span className=\"font-medium\">Average Quantity per Product:</span> {averageQuantity}\r\n            </p>\r\n            <h3 className=\"text-xl font-semibold mb-2\">Top 3 Products by Quantity</h3>\r\n            <ul className=\"list-disc pl-5 text-gray-700\">\r\n              {topProducts.map((product, index) => (\r\n                <li key={index}>\r\n                  {product.item_name}: {product.quantity} units\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InventoryAnalysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}