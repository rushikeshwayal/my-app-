{"ast":null,"code":"var _jsxFileName = \"G:\\\\Hack Indore\\\\React Main\\\\my-app\\\\src\\\\components\\\\Department\\\\AddProductToDept.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from 'uuid'; // UUID package for generating unique IDs\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HealthcareInventoryForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    itemName: \"\",\n    quantity: \"\",\n    location: \"\",\n    expiryDate: \"\",\n    manufacturingDate: \"\",\n    manufacturerName: \"\",\n    frontCameraPhoto: null,\n    backCameraPhoto: null\n  });\n  const [geoLocation, setGeoLocation] = useState({\n    lat: null,\n    lng: null\n  });\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const startCamera = async cameraType => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: cameraType\n        }\n      });\n      const video = videoRef.current;\n      video.srcObject = stream;\n      video.play();\n    } catch (error) {\n      console.error(\"Error accessing camera: \", error);\n    }\n  };\n  const stopCamera = () => {\n    const video = videoRef.current;\n    const stream = video.srcObject;\n    if (stream) {\n      const tracks = stream.getTracks();\n      tracks.forEach(track => track.stop());\n      video.srcObject = null;\n    }\n  };\n  const capturePhoto = async cameraType => {\n    const canvas = canvasRef.current;\n    const video = videoRef.current;\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n    const context = canvas.getContext(\"2d\");\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\n    stopCamera();\n    const photoDataUrl = canvas.toDataURL(\"image/png\");\n    setFormData({\n      ...formData,\n      [cameraType === \"user\" ? \"frontCameraPhoto\" : \"backCameraPhoto\"]: photoDataUrl\n    });\n\n    // Update geolocation when photo is captured\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setGeoLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Error obtaining geolocation:\", error);\n      });\n    }\n  };\n  const handleGeoLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setGeoLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, error => {\n        console.error(\"Error obtaining geolocation:\", error);\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const uniqueId = uuidv4(); // Generate a unique ID for this entry\n\n    const dataToSubmit = {\n      id: uniqueId,\n      ...formData,\n      geoLocation\n    };\n    try {\n      await axios.post(\"http://localhost:5000/api/submit-inventory\", dataToSubmit);\n      alert(\"Form submitted successfully\");\n    } catch (error) {\n      console.error(\"Error submitting form:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-4 border border-gray-300 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Healthcare Inventory Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 mb-2\",\n          children: \"Capture Photos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => startCamera(\"user\"),\n          className: \"px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 mr-2\",\n          children: \"Capture Front Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => startCamera(\"environment\"),\n          className: \"px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600\",\n          children: \"Capture Back Camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => capturePhoto(\"user\"),\n          className: \"px-4 py-2 bg-green-500 text-white font-semibold rounded-lg hover:bg-green-600 mt-2\",\n          children: \"Capture Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef,\n          width: \"640\",\n          height: \"480\",\n          autoPlay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), formData.frontCameraPhoto && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: formData.frontCameraPhoto,\n          alt: \"Front Camera\",\n          className: \"mt-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), formData.backCameraPhoto && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: formData.backCameraPhoto,\n          alt: \"Back Camera\",\n          className: \"mt-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 mb-2\",\n          children: \"Geolocation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleGeoLocation,\n          className: \"px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600\",\n          children: \"Get Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), geoLocation.lat && geoLocation.lng && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: [\"Latitude: \", geoLocation.lat, \", Longitude: \", geoLocation.lng]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full px-4 py-2 bg-green-500 text-white font-semibold rounded-lg hover:bg-green-600\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(HealthcareInventoryForm, \"yXoV709uEj4gplRMMNG1su/t5H8=\");\n_c = HealthcareInventoryForm;\nexport default HealthcareInventoryForm;\nvar _c;\n$RefreshReg$(_c, \"HealthcareInventoryForm\");","map":{"version":3,"names":["React","useState","useRef","axios","v4","uuidv4","jsxDEV","_jsxDEV","HealthcareInventoryForm","_s","formData","setFormData","itemName","quantity","location","expiryDate","manufacturingDate","manufacturerName","frontCameraPhoto","backCameraPhoto","geoLocation","setGeoLocation","lat","lng","videoRef","canvasRef","handleInputChange","e","name","value","target","startCamera","cameraType","stream","navigator","mediaDevices","getUserMedia","video","facingMode","current","srcObject","play","error","console","stopCamera","tracks","getTracks","forEach","track","stop","capturePhoto","canvas","width","videoWidth","height","videoHeight","context","getContext","drawImage","photoDataUrl","toDataURL","geolocation","getCurrentPosition","position","coords","latitude","longitude","handleGeoLocation","handleSubmit","preventDefault","uniqueId","dataToSubmit","id","post","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","ref","autoPlay","style","display","src","alt","_c","$RefreshReg$"],"sources":["G:/Hack Indore/React Main/my-app/src/components/Department/AddProductToDept.jsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuidv4 } from 'uuid'; // UUID package for generating unique IDs\r\n\r\nfunction HealthcareInventoryForm() {\r\n  const [formData, setFormData] = useState({\r\n    itemName: \"\",\r\n    quantity: \"\",\r\n    location: \"\",\r\n    expiryDate: \"\",\r\n    manufacturingDate: \"\",\r\n    manufacturerName: \"\",\r\n    frontCameraPhoto: null,\r\n    backCameraPhoto: null,\r\n  });\r\n\r\n  const [geoLocation, setGeoLocation] = useState({ lat: null, lng: null });\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const startCamera = async (cameraType) => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { facingMode: cameraType },\r\n      });\r\n      const video = videoRef.current;\r\n      video.srcObject = stream;\r\n      video.play();\r\n    } catch (error) {\r\n      console.error(\"Error accessing camera: \", error);\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    const video = videoRef.current;\r\n    const stream = video.srcObject;\r\n    if (stream) {\r\n      const tracks = stream.getTracks();\r\n      tracks.forEach((track) => track.stop());\r\n      video.srcObject = null;\r\n    }\r\n  };\r\n\r\n  const capturePhoto = async (cameraType) => {\r\n    const canvas = canvasRef.current;\r\n    const video = videoRef.current;\r\n\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n    const context = canvas.getContext(\"2d\");\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n    stopCamera();\r\n\r\n    const photoDataUrl = canvas.toDataURL(\"image/png\");\r\n    setFormData({\r\n      ...formData,\r\n      [cameraType === \"user\" ? \"frontCameraPhoto\" : \"backCameraPhoto\"]:\r\n        photoDataUrl,\r\n    });\r\n\r\n    // Update geolocation when photo is captured\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setGeoLocation({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error obtaining geolocation:\", error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleGeoLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setGeoLocation({\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.error(\"Error obtaining geolocation:\", error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const uniqueId = uuidv4(); // Generate a unique ID for this entry\r\n\r\n    const dataToSubmit = {\r\n      id: uniqueId,\r\n      ...formData,\r\n      geoLocation,\r\n    };\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/submit-inventory\", dataToSubmit);\r\n      alert(\"Form submitted successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error submitting form:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto p-4 border border-gray-300 rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Healthcare Inventory Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form Fields */}\r\n        {/* ... Same as before ... */}\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 mb-2\">Capture Photos</label>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => startCamera(\"user\")}\r\n            className=\"px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600 mr-2\"\r\n          >\r\n            Capture Front Camera\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => startCamera(\"environment\")}\r\n            className=\"px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600\"\r\n          >\r\n            Capture Back Camera\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => capturePhoto(\"user\")}\r\n            className=\"px-4 py-2 bg-green-500 text-white font-semibold rounded-lg hover:bg-green-600 mt-2\"\r\n          >\r\n            Capture Photo\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <video ref={videoRef} width=\"640\" height=\"480\" autoPlay />\r\n          <canvas ref={canvasRef} style={{ display: \"none\" }}></canvas>\r\n          {formData.frontCameraPhoto && (\r\n            <img\r\n              src={formData.frontCameraPhoto}\r\n              alt=\"Front Camera\"\r\n              className=\"mt-2\"\r\n            />\r\n          )}\r\n          {formData.backCameraPhoto && (\r\n            <img\r\n              src={formData.backCameraPhoto}\r\n              alt=\"Back Camera\"\r\n              className=\"mt-2\"\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 mb-2\">Geolocation</label>\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleGeoLocation}\r\n            className=\"px-4 py-2 bg-blue-500 text-white font-semibold rounded-lg hover:bg-blue-600\"\r\n          >\r\n            Get Current Location\r\n          </button>\r\n          {geoLocation.lat && geoLocation.lng && (\r\n            <p className=\"mt-2 text-gray-600\">\r\n              Latitude: {geoLocation.lat}, Longitude: {geoLocation.lng}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full px-4 py-2 bg-green-500 text-white font-semibold rounded-lg hover:bg-green-600\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthcareInventoryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}